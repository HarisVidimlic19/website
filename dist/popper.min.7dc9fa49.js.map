{"version":3,"sources":["../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/utils/isModifierRequired.js","../../src/utils/getOppositeVariation.js","../../src/utils/clockwise.js","../../src/modifiers/offset.js","../../src/modifiers/arrow.js","../../src/utils/debounce.js","../../src/modifiers/computeStyle.js","../../src/utils/isNative.js","../../src/utils/isIE10.js","../../src/modifiers/flip.js","../../src/index.js","../../src/methods/defaults.js","../../src/modifiers/index.js","../../src/modifiers/shift.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/keepTogether.js","../../src/modifiers/inner.js","../../src/modifiers/hide.js","../../src/modifiers/applyStyle.js"],"names":["functionToCheck","getType","toString","call","element","nodeType","css","window","getComputedStyle","property","nodeName","parentNode","host","indexOf","document","body","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","offsetParent","getOffsetParent","documentElement","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","styles","split","Math","isIE10","computedStyle","getSize","offsets","width","height","getBoundingClientRect","rect","sizes","clientWidth","result","clientHeight","offsetWidth","vertScrollbar","offsetHeight","horizScrollbar","getBordersSize","getClientRect","runIsIE10","isHTML","parent","childrenRect","borderTopWidth","borderLeftWidth","parentRect","marginTop","marginLeft","scrollParent","includeScroll","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","relativeOffset","isFixed","boundaries","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","getWindowSizes","padding","placement","getBoundaries","rects","refRect","Object","keys","map","getArea","sort","b","a","area","filteredAreas","sortedAreas","filter","popper","length","key","variation","computedPlacement","parseFloat","marginBottom","marginRight","hash","replace","getOuterSizes","popperRect","mainSide","isHoriz","secondarySide","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","slice","modifiers","forEach","fn","function","enabled","isFunction","data","reference","isDestroyed","getReferenceOffsets","state","computeAutoPlacement","options","flip","boundariesElement","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","name","prefixes","upperProp","charAt","toUpperCase","i","prefix","toCheck","style","isModifierEnabled","removeAttribute","disableEventListeners","removeOnDestroy","removeChild","target","isBody","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","cancelAnimationFrame","removeEventListeners","isNaN","n","isFinite","unit","isNumeric","attributes","value","setAttribute","requesting","isRequired","some","warn","requested","counter","validPlacements","concat","reverse","str","size","useHeight","fragments","offset","trim","frag","search","splitRegex","divider","ops","measurement","mergeWithPrevious","op","reduce","toValue","index2","basePlacement","parseOffset","min","max","nativeHints","isBrowser","longerTimeoutBrowsers","navigator","userAgent","supportsNativeMutationObserver","isNative","MutationObserver","scheduled","createElement","observe","appVersion","Popper","requestAnimationFrame","update","bind","Defaults","jquery","onLoad","enableEventListeners","destroy","Utils","global","PopperUtils","placements","shiftvariation","isVertical","shiftOffsets","instance","priority","check","escapeWithReference","floor","opSide","isModifierRequired","arrowElement","querySelector","len","sideCapitalized","toLowerCase","arrowElementSize","center","popperMarginSide","sideValue","arrow","round","placementOpposite","flipOrder","behavior","FLIP","BEHAVIORS","CLOCKWISE","clockwise","COUNTERCLOCKWISE","index","popperOffsets","refOffsets","overlapsRef","overflowsLeft","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","flipped","subtractLength","bound","hide","x","y","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","prefixedProperty","getSupportedPropertyName","willChange","invertTop","invertLeft","arrowStyles"],"mappings":"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","file":"popper.min.7dc9fa49.js","sourceRoot":"..","sourcesContent":["/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element ||\n    ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","import isIE10 from './isIE10';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE10()\n      ? html[`offset${axis}`] +\n        computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] +\n        computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]\n      : 0\n  );\n}\n\nexport default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  const computedStyle = isIE10() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE10 from './isIE10';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10()) {\n    try {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = runIsIE10();\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  const borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = +styles.marginTop.split('px')[0];\n    const marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const popperMarginSide = getStyleComputedProperty(\n    data.instance.popper,\n    `margin${sideCapitalized}`\n  ).replace('px', '');\n  let sideValue =\n    center - getClientRect(data.offsets.popper)[side] - popperMarginSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  // floor sides to avoid blurry text\n  const offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right),\n  };\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nlet isIE10 = undefined;\n\nexport default function() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedule an update, it will run on the next UI update available\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport',\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n"]}